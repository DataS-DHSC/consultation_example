---
title: "Step 3 - LDA analysis"
format: 
  html:
    number-sections: true
    anchor-sections: true
editor: visual
---

## LDA analysis {.unnumbered}

LDA analysis is a "bag of words" approach, assigning individual words to topics and then topics to responses based on the occurrence of these words. While the method is able to automatically fit these distributions it does require the total number of topics to be manually specified. To do this we look at the log-likelihood of the distributions across a range of topic numbers and then select the smallest number of topics that gives the maximum log-likelihood.

The arbitrary topics generated by the LDA then need to be manually assigned to real topic areas with similar topics being merged and undefined "noise" topics flagged. This manual step means that it is better to be conservative and select a greater number of topics if there is any ambiguity to make sure you have captured everything.

Note - this analysis performs pre-processing of the responses and so relies on the configuration performed in *Step 2 - Pre-process Responses*.

### Setup {.unnumbered}

```{r}
#| output: false
#| warning: false

if (!requireNamespace("librarian")) install.packages("librarian", quiet = TRUE)

# need to sort out the below
librarian::stock(
  c(
    "tidyverse",
    "tidytext",
    "here",
    "yaml",
    "writexl",
    "DT",
    "credentials"
  )
)

credentials::set_github_pat()
librarian::stock(
  c(
    "DataS-DHSC/DHSCconsultations"
  )
)

library(tidyverse)

here::i_am(file.path("R", "03_lda_analysis.qmd"))

# read config file
config <- yaml::read_yaml(
  here::here("input", "config.yml")
)

# load in text cleaner
source(here::here("R", "clean_text.R"))

# load in file tools
file_tools <- new.env()
source(here::here("R", "file_tools.R"), local = file_tools)

stem_word_exceptions <- file_tools$read_stem_word_exceptions()
glossary_words <- file_tools$read_glossary_words()
stop_words <- file_tools$read_stop_words()

lda_seed <- 1984
```

## Load responses

Load all your responses into the variable below.

```{r}
responses <- DHSCconsultations::dummy_response

responses_lda <- responses %>%
  select(
    all_of(
      c(
        "response_id",
        "Please share your views on policy 1",
        "Please share your views on policy 2"
      )
    )
  )
```

## Select topic numbers for each question

To select the number of topics to use for analysing the responses to each question we run the LDA model across a potential range of topic numbers. We then look to maximise the log-likelihood of the model fit to determine the final number of topics to assign each question.

Starting from zero, the log-likelihood of the LDA will initially increase as adding more topics improves the probability that the variability in the responses can be explained by that number of topics. The log-likelihood will then plateau before starting to fall as further increasing the number of topics makes it less likely that the observed variability in responses would occur given the number of topics available.

When trying to identify the correct number of topics, a good rule of thumb is to initially scan across a range `seq(10, 80, 10)` for all questions before tailoring the range using a higher resolution scan around the point of initial maximum log-likelihood.

### Number of topics per question - low resolution scan

Perform the low resolution scan of topic numbers.

Note - this section might need to be repeated if the initial rise to maximum log-likelihood falls outside of the used range.

#### Set initial scan ranges

```{r}
topic_number_low_res <- list(
  "Please share your views on policy 1" = seq(10, 80, 10),
  "Please share your views on policy 2" = seq(10, 80, 10)
)
```

#### Run LDA scan

Run the model across the low resolution range of topic numbers provided above.

Note - the below can take significant time to complete for a large number of responses.

```{r}
lda_fits_low_res <- responses_lda %>%
  DHSCconsultations::fit_lda(
    "response_id",
    topic_number_low_res,
    lda_seed,
    clean_text,
    glossary_words,
    stop_words,
    stem_word_exceptions
  )
```

#### Check model convergence

The LDA implementation uses Gibbs sampling to calculate distributions. This means that sufficient iterations of the model need to be made to ensure that it has reached its stationary state and so the log-likelihood has stabilised to a particular value. The convergence graphs show the log-likelihood across sequential iterations as well as a black line representing the calculated mean log-likelihood based on a set of samples (defaults to every 50 iterations) after an initial burn in period (defaults to 1000 iterations). If the model has not settled to a single log-likelihood then you will need to re-run the model using a greater burn-in period and/or number of iterations.

```{r}
lda_fits_low_res %>%
  DHSCconsultations::view_lda_fit_convergence()
```

#### Identify smaller scan range

Generate graphs for the log-likelihood across the different number of topics for each question. These should be used to refine your scan range to make sure you are looking at a higher resolution around the initial maximum log-likelihood.

```{r}
lda_fits_low_res %>%
  DHSCconsultations::view_lda_fit_loglikelihood()
```

#### Save output

```{r}
lda_fits_low_res %>%
  DHSCconsultations::write_lda_fit(
    here::here(
      config$general_params$output_dir,
      "lda_fit"
    ), 
    prefix = "low_res"
  )
```

### Number of topics per question - high resolution scan

Perform the high resolution scan of topic numbers.

#### Set high resolution scan ranges

These ranges have been picked as they cover the points on either side of the initial maximum log-likelihood found using the low resolution scan.

```{r}
topic_number_high_res <- list(
  "Please share your views on policy 1" = seq(10, 30, 2),
  "Please share your views on policy 2" = seq(10, 30, 2)
)
```

#### Run LDA scan

Run the model across the low resolution range of topic numbers provided above.

Note - the below can take significant time to complete for a large number of responses.

```{r}
lda_fits_high_res <- responses_lda %>%
  DHSCconsultations::fit_lda(
    "response_id",
    topic_number_high_res,
    lda_seed,
    clean_text,
    glossary_words,
    stop_words,
    stem_word_exceptions
  )
```

#### Check model convergence

Check convergence at higher resolution.

```{r}
lda_fits_high_res %>%
  DHSCconsultations::view_lda_fit_convergence()
```

#### Identify final topic number

Generate graphs for the log-likelihood across the different number of topics for each question. The final topic number is the smallest number that achieves maximum log-likelihood.

Note - it is a good idea to be conservative and select more topics if there is any ambiguity as topics will be manually checked.

```{r}
lda_fits_high_res %>%
  DHSCconsultations::view_lda_fit_loglikelihood()
```

#### Save output

```{r}
lda_fits_high_res %>%
  DHSCconsultations::write_lda_fit(
    here::here(
      config$general_params$output_dir,
      "lda_fit"
    ), 
    prefix = "high_res"
  )
```

## Final model

Based on the above fits select the final number of topics for each questions and run the LDA.

### Number of topics

```{r}
topic_number <- list(
  "Please share your views on policy 1" = 22,
  "Please share your views on policy 2" = 24
)
```

### Run LDA

Run the model across topic numbers provided above.

Note - the below can take significant time to complete.

```{r}
lda_final <- responses_lda %>%
  DHSCconsultations::run_lda(
    "response_id",
    topic_number,
    lda_seed,
    clean_text,
    glossary_words,
    stop_words,
    stem_word_exceptions
  )
```

### Check model convergence

Check convergence of final fit. If there is a significant difference between the final value of the log-likelihood and the mean then you will need to re-run the model using a greater burn-in period and/or number of iterations.

```{r}
lda_final %>%
  DHSCconsultations::view_lda_convergence()
```

### Save output

```{r}
lda_final %>%
  DHSCconsultations::write_lda(
    here::here(
      config$general_params$output_dir,
      "lda"
    )
  )
```
